<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.eastteam.myprogram.dao.MediaMybatisDao">
	<insert id="insert" parameterType="Media" useGeneratedKeys="true" keyProperty="id">
		insert into medias (description,title,media_type,path,status,user_id,upload_timestamp) 
		values(#{description},#{title},#{mediaType},#{path},#{status},#{userId},now());
	</insert>
	
	<update id="update" parameterType="Media">
		update medias set title=#{title}, description=#{description} 
		where media_id=#{id} 
	</update>
	
	<insert id="insertCategory" parameterType="map">
		insert into media_category (media_id,category_id) 
		values(#{mediaId},#{categoryId});
	</insert>
	
	<update id="deleteMediaCategory" parameterType="Long">
		delete from media_category where media_id=#{media_id}
	</update>
	
	<resultMap id="mediaDetailMap" type="Media">
		<id property="id" column="media_id" />
		<result property="description" column="description" />
		<result property="title" column="title" />
		<result property="mediaType" column="mediaType" />
		<result property="path" column="path" />
		<result property="status" column="status" />
		<result property="userId" column="userId" />
		<result property="uploadTimestamp" column="uploadTimestamp" />
		<collection property="categorys" column="media_id" ofType="Category" select="selectCategory">
		</collection>
	</resultMap>
	<select id="selectCategory" resultType="Category">
	    select c.id, c.name 
	    from media_category mc, category c 
	    where mc.category_id=c.id and mc.media_id=#{media_id}
	</select>
	
	<select id="search" parameterType="map" resultMap="mediaDetailMap">
		select distinct m.media_id, m.title, m.description,m.media_type as mediaType,m.path,m.status,m.user_id as userId,m.upload_timestamp as uploadTimestamp
		from medias m left join media_category mc on m.media_id=mc.media_id 
		<where>
		    <if test="categoryId != null">
				mc.category_id like '${categoryId}%'
			</if>
			<if test="mediaType != null">
				and m.media_type=#{mediaType}
			</if>
		</where>
		<if test="sort != null">
			order by ${sort} desc
		</if>
		<if test="offset != null">
			limit #{offset}, #{pageSize}
		</if>
	</select>
	
	<select id="getCount" parameterType="map" resultType="Long">
		select count(0) from (select distinct m.media_id from medias m left join media_category mc on m.media_id=mc.media_id 
		<where>
		    <if test="categoryId != null">
				mc.category_id like '${categoryId}%'
			</if>
			<if test="mediaType != null">
				and m.media_type=#{mediaType}
			</if>
		</where>
		<if test="sort != null">
			order by ${sort} desc
		</if>
		<if test="offset != null">
			limit #{offset}, #{pageSize}
		</if>) t
	</select>
	
	<select id="getMedia" resultMap="mediaDetailMap">
		select distinct m.media_id, m.title, m.description,m.media_type as mediaType,m.path,m.status,m.user_id as userId,m.upload_timestamp as uploadTimestamp
		from medias m left join media_category mc on m.media_id=mc.media_id 
		where m.media_id= #{media_id}
	</select>
</mapper> 
