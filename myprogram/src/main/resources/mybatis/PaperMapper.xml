<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eastteam.myprogram.dao.PaperMybatisDao">
	<resultMap id="paperDetailMap" type="Paper">
		<id property="id" column="paper_id"/>
		<result property="paperName" column="paper_name"/>
		<association property="businessType" javaType="Category">
			<id property="id" column="cb_id" />
			<result property="name" column="cb_name" />
		</association>
		<association property="status" javaType="Category">
			<id property="id" column="cs_id" />
			<result property="name" column="cs_name" />
		</association>
		<collection property="questions" column="paper_id" ofType="Question" select="selectQuestions">				
		</collection>
	</resultMap>
	<select id="search" parameterType="map" resultMap="paperDetailMap">
		select p.paper_id, p.paper_name, cb.id as cb_id, cb.name as cb_name, cs.id as cs_id, cs.name as cs_name
		from papers p
		left join category cb on p.business_type=cb.id
		left join category cs on p.status=cs.id
		<where>
			<if test="categoryIdList != null">
		          (cs.id in
		        <foreach item="item" index="index" collection="categoryIdList" open="(" separator="," close=")">
			        #{item}
				</foreach>
			</if>
			<if test="categoryIdList != null">
		          or cb.id in 
		        <foreach item="item" index="index" collection="categoryIdList" open="(" separator="," close=")">
			        #{item}
				</foreach>)
			</if>
			<if test="categoryIdList != null and keyword != null">
				and 
			</if>
			<if test="keyword != null">
				p.paper_name like '%${keyword}%'
			</if>
		</where>
		<if test="sort != null">
			order by ${sort}
		</if>
		<if test="offset != null">
			limit #{offset}, #{pageSize}
		</if>
	</select>
	<select id="getCount" parameterType="map" resultType="Long">
		select count(0) from (select distinct p.paper_id from papers p left join category cb on p.business_type=cb.id left join category cs on p.status=cs.id
		<where>
			<if test="categoryIdList != null">
		          (cs.id in
		        <foreach item="item" index="index" collection="categoryIdList" open="(" separator="," close=")">
			        #{item}
				</foreach>
			</if>
			<if test="categoryIdList != null">
		          or cb.id in 
		        <foreach item="item" index="index" collection="categoryIdList" open="(" separator="," close=")">
			        #{item}
				</foreach>)
			</if>
			<if test="categoryIdList != null and keyword != null">
				and 
			</if>
			<if test="keyword != null">
				p.paper_name like '%${keyword}%'
			</if>
		</where>)t
	</select>
	<select id="selectQuestions" resultType="Question">
	    select q.question as question, q.question_id as id, q.question_type as questionType, q.question_options as questionOptions, q.trashed as trashed, pq.position as position
	    from questions q, paper_questions pq 
	    where q.question_id=pq.question_id and pq.paper_id=#{paper_id} order by pq.position
	</select>
	<insert id="insertPaper" parameterType="Paper" useGeneratedKeys="true" keyProperty="id">
		insert into papers (paper_name, creat_timestamp, business_type, status) 
		values(#{paperName}, now(), #{businessType.id}, '1-0-1-0');
	</insert>
	<insert id="insertQuestions" parameterType="map">
		insert into paper_questions (paper_id, question_id, position) 
		values (#{paperId}, #{questionId}, #{position});
	</insert>
	<select id="selectPaper" parameterType="map" resultMap="paperDetailMap">
		select p.paper_id, p.paper_name, cb.id as cb_id, cb.name as cb_name, cs.id as cs_id, cs.name as cs_name
		from papers p
		left join category cb on p.business_type=cb.id
		left join category cs on p.status=cs.id
		where p.paper_id=#{paperId};
	</select>
	<delete id="deletePaper" parameterType="Long">
		delete from papers where paper_id=#{id}
	</delete>
	<delete id="deleteQuestions" parameterType="Long">
		delete from paper_questions where paper_id=#{id}
	</delete>
	<update id="publishPaper" parameterType="Long">
		update papers set status='1-0-1-1'
		where paper_id=#{id}
	</update>
	<update id="updatePaper" parameterType="Paper">
		update papers set paper_name = #{paperName}, business_type = #{businessType.id}, status = '1-0-1-0'
		where paper_id=#{id}
	</update>
	<update id="discardPaper" parameterType="Long">
		update papers set status='1-0-1-2'
		where paper_id=#{id}
	</update>
</mapper>